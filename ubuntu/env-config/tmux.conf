# 状态条设置
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "left"
set-option -g status-left-length 60
set-option -g status-right-length 90

# set -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P"
set-option -g status-left "#[fg=green]Session: #S #[fg=yellow]#I #[fg=cyan]#P #(/home/liwei.cai/bin/tmux-powerline-master/powerline.sh left)"

set -g status-right "#(date +%H:%M' ') #[fg=green,bg=black,bright]#(tmux-mem-cpu-load 2)#[default]"
# set-option -g status-right "#(/home/liwei.cai/bin/tmux-powerline-master/powerline.sh right)"

set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"

set -g status-interval 60
set -g visual-activity on
setw -g monitor-activity on

# 颜色配置 black,white,(bright)red,(bright)green,(bright)yellow,(bright)blue,(bright)magenta,(bright)cyan
# set -g status-bg colour256
# set -g status-fg yellow
set -g default-terminal "screen-256color"
# 设置底部状态条的颜色
set -g status-fg white
set -g status-bg black

setw -g mode-keys vi
# setw -g mode-keys emacs

set-option -g base-index 1
set-option -g display-time 5000
set-option -g repeat-time 1000
set-option -g status-keys vi

set-window-option -g mode-keys vi

set-option -g prefix C-b
unbind-key C-a
bind-key C-b send-prefix

bind-key / command-prompt "split-window 'exec man %%'"
bind-key R source-file ~/.tmux.conf \; display-message "source-file done"
bind-key S command-prompt "new-window -n %1 'ssh %1'"
bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical
bind-key z kill-session

# 选择分割的窗格,不需要松开ctrl键，多次跳转更方便
bind-key C-k selectp -U            # 选择上窗格
bind-key C-j selectp -D            # 选择下窗格
bind-key C-h selectp -L            # 选择左窗格
bind-key C-l selectp -R            # 选择右窗格

# 鼠标支持
# Toggle mouse on with ^B m
bind m \
	 set -g mouse on \;\
	 display 'Mouse: ON'

# Toggle mouse off with ^B M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# 粘贴
# move x clipboard into tmux paste buffer
#bind -n C-v run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind C-y run "tmux show-buffer | xclip -i"
